<?php defined('SYSPATH') OR die('No direct script access.'); ?>

2016-08-06 17:49:47 --- EMERGENCY: Database_Exception [ 1153 ]: Got a packet bigger than 'max_allowed_packet' bytes [ INSERT INTO `problem` (`problem_id`, `title`, `description`, `input`, `output`, `sample_input`, `sample_output`, `spj`, `hint`, `source`, `in_date`, `time_limit`, `memory_limit`, `defunct`, `accepted`, `submit`, `solved`) VALUES (NULL, 'Campus', 'Oscolcovo city has a campus consisting of&nbsp;n&nbsp;student dormitories,&nbsp;n&nbsp;universities and&nbsp;n&nbsp;military offices. Initially, the&nbsp;i-th dormitory belongs to the&nbsp;i-th university and is assigned to the&nbsp;i-th military office.\nLife goes on and the campus is continuously going through some changes. The changes can be of four types:\n\nUniversity&nbsp;aj&nbsp;merges with university&nbsp;bj. After that all the dormitories that belonged to university&nbsp;bj&nbsp;are assigned to to university&nbsp;aj, and university&nbsp;bj&nbsp;disappears.\nMilitary office&nbsp;cj&nbsp;merges with military office&nbsp;dj. After that all the dormitories that were assigned to military office&nbsp;dj, are assigned to military office&nbsp;cj, and military office&nbsp;dj&nbsp;disappears.\nStudents of university&nbsp;xj&nbsp;move in dormitories. Lets&nbsp;kxj&nbsp;is the number of dormitories that belong to this university at the time when the students move in. Then the number of students in each dormitory of university&nbsp;xj&nbsp;increases by&nbsp;kxj&nbsp;(note that the more dormitories belong to the university, the more students move in each dormitory of the university).\nMilitary office number&nbsp;yj&nbsp;conducts raids on all the dormitories assigned to it and takes all students from there.\n\nThus, at each moment of time each dormitory is assigned to exactly one university and one military office. Initially, all the dormitory are empty.\nYour task is to process the changes that take place in the campus and answer the queries, how many people currently live in dormitory&nbsp;qj.', 'The first line contains two integers,&nbsp;n&nbsp;and&nbsp;m&nbsp;(1&thinsp;&le;&thinsp;n,&thinsp;m&thinsp;&le;&thinsp;5&middot;105)&nbsp;&mdash; the number of dormitories and the number of queries, respectively.\nNext&nbsp;m&nbsp;lines contain the queries, each of them is given in one of the following formats:\n\n&laquo;U&nbsp;aj&nbsp;bj&raquo; &mdash; merging universities;\n&laquo;M&nbsp;cj&nbsp;dj&raquo; &mdash; merging military offices;\n&laquo;A&nbsp;xj&raquo; &mdash; students of university&nbsp;xj&nbsp;moving in the dormitories;\n&laquo;Z&nbsp;yj&raquo; &mdash; a raid in military office&nbsp;yj;\n&laquo;Q&nbsp;qj&raquo; &mdash; a query asking the number of people in dormitory&nbsp;qj.\n\nAll the numbers in the queries are positive integers and do not exceed&nbsp;n. It is guaranteed that at the moment of the query the universities and military offices, that are present in the query, exist.', 'In the&nbsp;i-th line print the answer to the&nbsp;i-th query asking the number of people in the dormitory.', '第一个例子：\n2 7\nA 1\nQ 1\nU 1 2\nA 1\nZ 1\nQ 1\nQ 2\n第二个例子：\n5 12\nU 1 2\nM 4 5\nA 1\nQ 1\nA 3\nA 4\nQ 3\nQ 4\nZ 4\nQ 4\nA 5\nQ 5', '第一个例子：\n1\n0\n2\n第二个例子：\n2\n1\n1\n0\n1', 0, 'Consider the first sample test:\n\nIn the first query university 1 owns only dormitory 1, so after the query dormitory 1 will have 1 student.\nAfter the third query university 1 owns dormitories 1 and 2.\nThe fourth query increases by 2 the number of students living in dormitories 1 and 2 that belong to university number 1. After that 3 students live in the first dormitory and 2 students live in the second dormitory.\nAt the fifth query the number of students living in dormitory 1, assigned to the military office 1, becomes zero.\n', '', '2016-08-06 17:49:47', '2', '256', 'Y', NULL, 0, 0) ] ~ MODPATH/database/classes/Kohana/Database/MySQLi.php [ 171 ] in /home/OnlineJudge/modules/database/classes/Kohana/Database/Query.php:251
2016-08-06 17:49:47 --- DEBUG: #0 /home/OnlineJudge/modules/database/classes/Kohana/Database/Query.php(251): Kohana_Database_MySQLi->query(2, 'INSERT INTO `pr...', false, Array)
#1 /home/OnlineJudge/application/classes/Model/Base.php(237): Kohana_Database_Query->execute()
#2 /home/OnlineJudge/application/classes/Controller/Admin/Problem.php(38): Model_Base->save()
#3 /home/OnlineJudge/application/classes/Controller/Base.php(253): Controller_Admin_Problem->action_edit()
#4 [internal function]: Controller_Base->execute()
#5 /home/OnlineJudge/system/classes/Kohana/Request/Client/Internal.php(97): ReflectionMethod->invoke(Object(Controller_Admin_Problem))
#6 /home/OnlineJudge/system/classes/Kohana/Request/Client.php(114): Kohana_Request_Client_Internal->execute_request(Object(Request), Object(Response))
#7 /home/OnlineJudge/system/classes/Kohana/Request.php(995): Kohana_Request_Client->execute(Object(Request))
#8 /home/OnlineJudge/index.php(103): Kohana_Request->execute()
#9 {main} in /home/OnlineJudge/modules/database/classes/Kohana/Database/Query.php:251
2016-08-06 17:50:34 --- EMERGENCY: Database_Exception [ 1153 ]: Got a packet bigger than 'max_allowed_packet' bytes [ UPDATE `problem` SET `problem_id` = '100080', `title` = 'Campus', `description` = 'Oscolcovo city has a campus consisting of&nbsp;n&nbsp;student dormitories,&nbsp;n&nbsp;universities and&nbsp;n&nbsp;military offices. Initially, the&nbsp;i-th dormitory belongs to the&nbsp;i-th university and is assigned to the&nbsp;i-th military office.\nLife goes on and the campus is continuously going through some changes. The changes can be of four types:\n\nUniversity&nbsp;aj&nbsp;merges with university&nbsp;bj. After that all the dormitories that belonged to university&nbsp;bj&nbsp;are assigned to to university&nbsp;aj, and university&nbsp;bj&nbsp;disappears.\nMilitary office&nbsp;cj&nbsp;merges with military office&nbsp;dj. After that all the dormitories that were assigned to military office&nbsp;dj, are assigned to military office&nbsp;cj, and military office&nbsp;dj&nbsp;disappears.\nStudents of university&nbsp;xj&nbsp;move in dormitories. Lets&nbsp;&nbsp;is the number of dormitories that belong to this university at the time when the students move in. Then the number of students in each dormitory of university&nbsp;xj&nbsp;increases by&nbsp;&nbsp;(note that the more dormitories belong to the university, the more students move in each dormitory of the university).\nMilitary office number&nbsp;yj&nbsp;conducts raids on all the dormitories assigned to it and takes all students from there.\n\nThus, at each moment of time each dormitory is assigned to exactly one university and one military office. Initially, all the dormitory are empty.\n&nbsp;\nYour task is to process the changes that take place in the campus and answer the queries, how many people currently live in dormitory&nbsp;qj.', `input` = 'The first line contains two integers,&nbsp;n&nbsp;and&nbsp;m&nbsp;(1&thinsp;&le;&thinsp;n,&thinsp;m&thinsp;&le;&thinsp;5&middot;105)&nbsp;&mdash; the number of dormitories and the number of queries, respectively.\nNext&nbsp;m&nbsp;lines contain the queries, each of them is given in one of the following formats:\n\n&laquo;U&nbsp;aj&nbsp;bj&raquo; &mdash; merging universities;\n&laquo;M&nbsp;cj&nbsp;dj&raquo; &mdash; merging military offices;\n&laquo;A&nbsp;xj&raquo; &mdash; students of university&nbsp;xj&nbsp;moving in the dormitories;\n&laquo;Z&nbsp;yj&raquo; &mdash; a raid in military office&nbsp;yj;\n&laquo;Q&nbsp;qj&raquo; &mdash; a query asking the number of people in dormitory&nbsp;qj.\n\nAll the numbers in the queries are positive integers and do not exceed&nbsp;n. It is guaranteed that at the moment of the query the universities and military offices, that are present in the query, exist.', `output` = 'In the&nbsp;i-th line print the answer to the&nbsp;i-th query asking the number of people in the dormitory.', `sample_input` = '第一个例子：\n2 7\nA 1\nQ 1\nU 1 2\nA 1\nZ 1\nQ 1\nQ 2\n第二个例子：\n5 12\nU 1 2\nM 4 5\nA 1\nQ 1\nA 3\nA 4\nQ 3\nQ 4\nZ 4\nQ 4\nA 5\nQ 5', `sample_output` = '第一个例子：\n1\n0\n2\n第二个例子：\n2\n1\n1\n0\n1', `spj` = 0, `hint` = 'Consider the first sample test:\n\nIn the first query university 1 owns only dormitory 1, so after the query dormitory 1 will have 1 student.\nAfter the third query university 1 owns dormitories 1 and 2.\nThe fourth query increases by 2 the number of students living in dormitories 1 and 2 that belong to university number 1. After that 3 students live in the first dormitory and 2 students live in the second dormitory.\nAt the fifth query the number of students living in dormitory 1, assigned to the military office 1, becomes zero.\n', `source` = '', `in_date` = '2016-08-06 17:50:00', `time_limit` = '2', `memory_limit` = '256', `defunct` = 'Y', `accepted` = NULL, `submit` = '0', `solved` = '0' WHERE `problem_id` = '100080' ] ~ MODPATH/database/classes/Kohana/Database/MySQLi.php [ 171 ] in /home/OnlineJudge/modules/database/classes/Kohana/Database/Query.php:251
2016-08-06 17:50:34 --- DEBUG: #0 /home/OnlineJudge/modules/database/classes/Kohana/Database/Query.php(251): Kohana_Database_MySQLi->query(3, 'UPDATE `problem...', false, Array)
#1 /home/OnlineJudge/application/classes/Model/Base.php(228): Kohana_Database_Query->execute()
#2 /home/OnlineJudge/application/classes/Controller/Admin/Problem.php(38): Model_Base->save()
#3 /home/OnlineJudge/application/classes/Controller/Base.php(253): Controller_Admin_Problem->action_edit()
#4 [internal function]: Controller_Base->execute()
#5 /home/OnlineJudge/system/classes/Kohana/Request/Client/Internal.php(97): ReflectionMethod->invoke(Object(Controller_Admin_Problem))
#6 /home/OnlineJudge/system/classes/Kohana/Request/Client.php(114): Kohana_Request_Client_Internal->execute_request(Object(Request), Object(Response))
#7 /home/OnlineJudge/system/classes/Kohana/Request.php(995): Kohana_Request_Client->execute(Object(Request))
#8 /home/OnlineJudge/index.php(103): Kohana_Request->execute()
#9 {main} in /home/OnlineJudge/modules/database/classes/Kohana/Database/Query.php:251
2016-08-06 21:18:21 --- EMERGENCY: Database_Exception [ 1153 ]: Got a packet bigger than 'max_allowed_packet' bytes [ UPDATE `problem` SET `problem_id` = '10015', `title` = 'New Language', `description` = 'Living in Byteland was good enough to begin with, but the good king decided to please his subjects and to introduce a national language. He gathered the best of wise men, and sent an expedition to faraway countries, so that they would find out all about how a language should be designed.\nAfter some time, the wise men returned from the trip even wiser. They locked up for six months in the dining room, after which they said to the king: \"there are a lot of different languages, but almost all of them have letters that are divided into vowels and consonants; in a word, vowels and consonants must be combined correctly.\"\nThere are very many rules, all of them have exceptions, but our language will be deprived of such defects! We propose to introduce a set of formal rules of combining vowels and consonants, and include in the language all the words that satisfy them.\nThe rules of composing words are:\n\nThe letters are divided into vowels and consonants in some certain way;\nAll words have a length of exactly&nbsp;n;\nThere are&nbsp;m&nbsp;rules of the form (pos1,&thinsp;t1,&thinsp;pos2,&thinsp;t2). Each rule is: if the position&nbsp;pos1&nbsp;has a letter of type&nbsp;t1, then the position&nbsp;pos2&nbsp;has a letter of type&nbsp;t2.\n\nYou are given some string&nbsp;s&nbsp;of length&nbsp;n, it is not necessarily a correct word of the new language. Among all the words of the language that lexicographically not smaller than the string&nbsp;s, find the minimal one in lexicographic order.', `input` = '&nbsp;\n\nThe first line contains a single line consisting of letters \'V\' (Vowel) and \'C\' (Consonant), determining which letters are vowels and which letters are consonants. The length of this string&nbsp;l&nbsp;is the size of the alphabet of the new language (1&thinsp;&le;&thinsp;l&thinsp;&le;&thinsp;26). The first&nbsp;l&nbsp;letters of the English alphabet are used as the letters of the alphabet of the new language. If the&nbsp;i-th character of the string equals to \'V\', then the corresponding letter is a vowel, otherwise it is a consonant.\nThe second line contains two integers&nbsp;n,&nbsp;m&nbsp;(1&thinsp;&le;&thinsp;n&thinsp;&le;&thinsp;200,&nbsp;0&thinsp;&le;&thinsp;m&thinsp;&le;&thinsp;4n(n&thinsp;-&thinsp;1))&nbsp;&mdash; the number of letters in a single word and the number of rules, correspondingly.\nNext&nbsp;m&nbsp;lines describe&nbsp;m&nbsp;rules of the language in the following format:&nbsp;pos1,&thinsp;t1,&thinsp;pos2,&thinsp;t2&nbsp;(1&thinsp;&le;&thinsp;pos1,&thinsp;pos2&thinsp;&le;&thinsp;n,&nbsp;pos1&thinsp;&ne;&thinsp;pos2,&nbsp;&nbsp;\'V\', \'C\'&nbsp;}).\nThe last line contains string&nbsp;s&nbsp;of length&nbsp;n, consisting of the first&nbsp;l&nbsp;small letters of the English alphabet.\nIt is guaranteed that no two rules are the same.\n', `output` = 'Print a smallest word of a language that is lexicographically not smaller than&nbsp;s. If such words does not exist (for example, if the language has no words at all), print&nbsp;\"-1\"&nbsp;(without the quotes).', `sample_input` = 'radar', `sample_output` = 'rr', `spj` = 0, `hint` = 'In the first test word&nbsp;\"aa\"&nbsp;is not a word of the language, but word&nbsp;\"ab\"&nbsp;is.\nIn the second test out of all four possibilities only word&nbsp;\"bb\"&nbsp;is not a word of a language, but all other words are lexicographically less, so there is no answer.\nIn the third test, due to the last rule,&nbsp;\"abac\"&nbsp;doesn\'t belong to the language (\"a\"&nbsp;is a vowel,&nbsp;\"c\"&nbsp;is a consonant). The only word with prefix&nbsp;\"ab\"&nbsp;that meets the given rules is&nbsp;\"abaa\". But it is less than&nbsp;\"abac\", so the answer will be&nbsp;\"acaa\"&nbsp;\nbinary search, bitmasks, brute force, greedy, implementation, strings', `source` = 'contest -E - 569 ', `in_date` = '2016-08-01 11:02:51', `time_limit` = '2', `memory_limit` = '256', `defunct` = 'Y', `accepted` = NULL, `submit` = '0', `solved` = '0' WHERE `problem_id` = '10015' ] ~ MODPATH/database/classes/Kohana/Database/MySQLi.php [ 171 ] in /home/OnlineJudge/modules/database/classes/Kohana/Database/Query.php:251
2016-08-06 21:18:21 --- DEBUG: #0 /home/OnlineJudge/modules/database/classes/Kohana/Database/Query.php(251): Kohana_Database_MySQLi->query(3, 'UPDATE `problem...', false, Array)
#1 /home/OnlineJudge/application/classes/Model/Base.php(228): Kohana_Database_Query->execute()
#2 /home/OnlineJudge/application/classes/Controller/Admin/Problem.php(38): Model_Base->save()
#3 /home/OnlineJudge/application/classes/Controller/Base.php(253): Controller_Admin_Problem->action_edit()
#4 [internal function]: Controller_Base->execute()
#5 /home/OnlineJudge/system/classes/Kohana/Request/Client/Internal.php(97): ReflectionMethod->invoke(Object(Controller_Admin_Problem))
#6 /home/OnlineJudge/system/classes/Kohana/Request/Client.php(114): Kohana_Request_Client_Internal->execute_request(Object(Request), Object(Response))
#7 /home/OnlineJudge/system/classes/Kohana/Request.php(995): Kohana_Request_Client->execute(Object(Request))
#8 /home/OnlineJudge/index.php(103): Kohana_Request->execute()
#9 {main} in /home/OnlineJudge/modules/database/classes/Kohana/Database/Query.php:251